# Default values for persons.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: Always
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    #GKE Annotaions
    #kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #cert-manager.io/cluster-issuer: letsencrypt-production
  hosts:
    - host: myapi.mooo.com
      paths:
        - path: /
          pathType: ImplementationSpecific
          serviceName: api-service
          servicePort: 80
    - host: mypersons.mooo.com
      paths:
        - path: /
          pathType: ImplementationSpecific
          serviceName: webapp-service
          servicePort: 80
  tls: #[]
    - secretName: portfolio-tls-secret
      hosts:
        - "myapi.mooo.com"
        - "mypersons.mooo.com"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

appAttributes:
  fullName:
    api: persons-backend
    web: persons-frontend
    fullName: persons
  replicaCount:
    api: 1
    web: 1
  podAnnotations:
    api: {}
    web: {}
  imagePullSecrets:
    api: []
    web: []
  podSecurityContext:
    api: {}
      # fsGroup: 2000
    web: {}
      # fsGroup: 2000
  securityContext:
    api: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    web: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
  image:
    api:
      repository: ewintil/persons-backend #gcr.io/engaged-kite-373111/persons-backend
      backendImagePullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      backendImageTag: latest #"v0.0.8"
      defaultTag: latest
    web:
      repository: ewintil/persons-webapp #gcr.io/engaged-kite-373111/persons-webapp
      webappImagePullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      webappImageTag: latest #"v0.0.8"
      defaultTag: latest
  service:
    api:
      type: ClusterIP
      port: "5000"
      portNumber: 5000
      name: api-service
    web:
      type: ClusterIP
      port: "3000"
      portNumber: 3000
      name: webapp-service
  resources:
    api: #{}
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    web: #{}
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  nodeSelector:
    api: {}
    web: {}
  affinity:
    api: {}
    web: {}
  tolerations:
    api: []
    web: []
  autoscaling:
    api:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
    web:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
  environmentVars:
    api:
      mongoHost: "mongo-headless.persons.svc.cluster.local"
      mongoHostDefault: "mongo-headless.default.svc.cluster.local"
      mongoPort: "27017"
    web:
      apiHost: "api-service.persons.svc.cluster.local"
  issuers:
    production:
      name: letsencrypt-production
      server: https://acme-v02.api.letsencrypt.org/directory
      email: sfrimpong112@gmail.com
      ingressClass: nginx
  
mongodbAutoInstall:
  enabled: true

mongodb:
  auth:
    enabled: true
    rootUser: root
    rootPassword: "example"
    usernames: ["sammy"]
    passwords: ["blue-bird"]
    databases: ["bluedb"]
  architecture: replicaset
  replicaCount: 3
  useStatefulSet: true
  nameOverride: mongo
  fullnameOverride: mongo